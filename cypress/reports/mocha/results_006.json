{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-28T17:20:34.635Z",
    "end": "2024-10-28T17:21:00.313Z",
    "duration": 25678,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e8511f0d-e7ed-4cea-8e32-7d41d8fdad78",
      "title": "",
      "fullFile": "cypress/e2e/lighthouse.cy.js",
      "file": "cypress/e2e/lighthouse.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "438c93a8-7ce8-4b78-9be1-691f0ab632cf",
          "title": "Lighthouse Audits",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should perform a Lighthouse audit for mobile",
              "fullTitle": "Lighthouse Audits should perform a Lighthouse audit for mobile",
              "timedOut": null,
              "duration": 13255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task('lighthouseAudit', {\n  url: 'https://chancerylaneproject.org',\n  opts: {\n    logLevel: 'info',\n    onlyCategories: ['performance', 'accessibility', 'best-practices', 'seo']\n  },\n  config: {\n    extends: 'lighthouse:default',\n    settings: {\n      onlyCategories: ['performance', 'accessibility', 'seo', 'best-practices'],\n      onlyAudits: ['first-contentful-paint', 'speed-index', 'largest-contentful-paint', 'cumulative-layout-shift', 'total-blocking-time']\n    }\n  }\n}).then(({\n  lhr,\n  report\n}) => {\n  expect(lhr).to.have.property('categories');\n  expect(lhr.categories.performance.score).to.be.greaterThan(0.5);\n  // Write the HTML report\n  cy.writeFile('cypress/reports/lighthouse/lighthouse-report-mobile.html', report);\n  // Save the JSON report\n  cy.writeFile('cypress/reports/lighthouse/lighthouse-report-mobile.json', JSON.stringify(lhr));\n});",
              "err": {},
              "uuid": "a8a6feec-7f6f-4501-9c94-444376a23cc2",
              "parentUUID": "438c93a8-7ce8-4b78-9be1-691f0ab632cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should perform a Lighthouse audit for desktop",
              "fullTitle": "Lighthouse Audits should perform a Lighthouse audit for desktop",
              "timedOut": null,
              "duration": 12399,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task('lighthouseAudit', {\n  url: 'https://chancerylaneproject.org',\n  opts: {\n    logLevel: 'info',\n    onlyCategories: ['performance', 'accessibility', 'best-practices', 'seo'],\n    formFactor: 'desktop',\n    // Default is mobile, https://github.com/GoogleChrome/lighthouse/blob/main/docs/emulation.md\n    screenEmulation: {\n      mobile: false,\n      width: 1350,\n      height: 940,\n      deviceScaleFactor: 1,\n      disabled: false\n    }\n  },\n  config: {\n    extends: 'lighthouse:default',\n    settings: {\n      onlyCategories: ['performance', 'accessibility', 'seo', 'best-practices'],\n      onlyAudits: ['first-contentful-paint', 'speed-index', 'largest-contentful-paint', 'cumulative-layout-shift', 'total-blocking-time']\n    }\n  }\n}).then(({\n  lhr,\n  report\n}) => {\n  expect(lhr).to.have.property('categories');\n  expect(lhr.categories.performance.score).to.be.greaterThan(0.5);\n  // Write the HTML report\n  cy.writeFile('cypress/reports/lighthouse/lighthouse-report-desktop.html', report);\n  // Save the JSON report\n  cy.writeFile('cypress/reports/lighthouse/lighthouse-report-desktop.json', JSON.stringify(lhr));\n});",
              "err": {},
              "uuid": "b96354b9-41b6-4a04-9926-629833310932",
              "parentUUID": "438c93a8-7ce8-4b78-9be1-691f0ab632cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8a6feec-7f6f-4501-9c94-444376a23cc2",
            "b96354b9-41b6-4a04-9926-629833310932"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25654,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mocha",
        "reportFilename": "results",
        "quiet": true,
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}