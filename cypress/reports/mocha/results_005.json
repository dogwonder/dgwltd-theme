{
  "stats": {
    "suites": 1,
    "tests": 13,
    "passes": 12,
    "pending": 0,
    "failures": 1,
    "start": "2024-10-28T17:20:21.809Z",
    "end": "2024-10-28T17:20:33.613Z",
    "duration": 11804,
    "testsRegistered": 13,
    "passPercent": 92.3076923076923,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "061a2bc3-1791-47a3-9c65-3ccc05e2d34d",
      "title": "",
      "fullFile": "cypress/e2e/a11y.cy.js",
      "file": "cypress/e2e/a11y.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b774cc58-e7af-4505-9c43-3cf5495683ae",
          "title": "Page accessibility tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have no accessibility violations on https://chancerylaneproject.org",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on https://chancerylaneproject.org",
              "timedOut": null,
              "duration": 1277,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "17493cb9-71d5-4551-8a22-7d708e4672de",
              "parentUUID": "b774cc58-e7af-4505-9c43-3cf5495683ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on https://chancerylaneproject.org/clauses/",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on https://chancerylaneproject.org/clauses/",
              "timedOut": null,
              "duration": 1210,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {
                "message": "Error: Total Accessibility Violations: 3\n\nAccessibility Violations Summary:\nError: aria-valid-attr-value, Impact: critical\nError: aria-valid-attr-value, Impact: critical\nError: aria-valid-attr-value, Impact: critical\n\nDetailed Errors:\n\n                ID: aria-valid-attr-value\n                Target: button[aria-controls=\"fliters-facets-content-1\"]\n                Impact: critical\n                Description: Ensure all ARIA attributes have valid values\n                Help: ARIA attributes must conform to valid values\n                Help URL: https://dequeuniversity.com/rules/axe/4.10/aria-valid-attr-value?application=axeAPI\n                HTML: <button type=\"button\" aria-controls=\"fliters-facets-content-1\" class=\"govuk-accordion__section-button\" aria-expanded=\"true\" aria-label=\"Jurisdiction , Hide this section\">\n                Failure Summary: Fix all of the following:\n  Invalid ARIA attribute value: aria-controls=\"fliters-facets-content-1\"\n\n\n                ID: aria-valid-attr-value\n                Target: button[aria-controls=\"fliters-facets-content-2\"]\n                Impact: critical\n                Description: Ensure all ARIA attributes have valid values\n                Help: ARIA attributes must conform to valid values\n                Help URL: https://dequeuniversity.com/rules/axe/4.10/aria-valid-attr-value?application=axeAPI\n                HTML: <button type=\"button\" aria-controls=\"fliters-facets-content-2\" class=\"govuk-accordion__section-button\" aria-expanded=\"true\" aria-label=\"Practice Areas , Hide this section\">\n                Failure Summary: Fix all of the following:\n  Invalid ARIA attribute value: aria-controls=\"fliters-facets-content-2\"\n\n\n                ID: aria-valid-attr-value\n                Target: button[aria-controls=\"fliters-facets-content-3\"]\n                Impact: critical\n                Description: Ensure all ARIA attributes have valid values\n                Help: ARIA attributes must conform to valid values\n                Help URL: https://dequeuniversity.com/rules/axe/4.10/aria-valid-attr-value?application=axeAPI\n                HTML: <button type=\"button\" aria-controls=\"fliters-facets-content-3\" class=\"govuk-accordion__section-button\" aria-expanded=\"true\" aria-label=\"Sector , Hide this section\">\n                Failure Summary: Fix all of the following:\n  Invalid ARIA attribute value: aria-controls=\"fliters-facets-content-3\"\n",
                "estack": "Error: Total Accessibility Violations: 3\n\nAccessibility Violations Summary:\nError: aria-valid-attr-value, Impact: critical\nError: aria-valid-attr-value, Impact: critical\nError: aria-valid-attr-value, Impact: critical\n\nDetailed Errors:\n\n                ID: aria-valid-attr-value\n                Target: button[aria-controls=\"fliters-facets-content-1\"]\n                Impact: critical\n                Description: Ensure all ARIA attributes have valid values\n                Help: ARIA attributes must conform to valid values\n                Help URL: https://dequeuniversity.com/rules/axe/4.10/aria-valid-attr-value?application=axeAPI\n                HTML: <button type=\"button\" aria-controls=\"fliters-facets-content-1\" class=\"govuk-accordion__section-button\" aria-expanded=\"true\" aria-label=\"Jurisdiction , Hide this section\">\n                Failure Summary: Fix all of the following:\n  Invalid ARIA attribute value: aria-controls=\"fliters-facets-content-1\"\n\n\n                ID: aria-valid-attr-value\n                Target: button[aria-controls=\"fliters-facets-content-2\"]\n                Impact: critical\n                Description: Ensure all ARIA attributes have valid values\n                Help: ARIA attributes must conform to valid values\n                Help URL: https://dequeuniversity.com/rules/axe/4.10/aria-valid-attr-value?application=axeAPI\n                HTML: <button type=\"button\" aria-controls=\"fliters-facets-content-2\" class=\"govuk-accordion__section-button\" aria-expanded=\"true\" aria-label=\"Practice Areas , Hide this section\">\n                Failure Summary: Fix all of the following:\n  Invalid ARIA attribute value: aria-controls=\"fliters-facets-content-2\"\n\n\n                ID: aria-valid-attr-value\n                Target: button[aria-controls=\"fliters-facets-content-3\"]\n                Impact: critical\n                Description: Ensure all ARIA attributes have valid values\n                Help: ARIA attributes must conform to valid values\n                Help URL: https://dequeuniversity.com/rules/axe/4.10/aria-valid-attr-value?application=axeAPI\n                HTML: <button type=\"button\" aria-controls=\"fliters-facets-content-3\" class=\"govuk-accordion__section-button\" aria-expanded=\"true\" aria-label=\"Sector , Hide this section\">\n                Failure Summary: Fix all of the following:\n  Invalid ARIA attribute value: aria-controls=\"fliters-facets-content-3\"\n\n    at eval (webpack://dgwltd/./cypress/e2e/a11y.cy.js:91:16)\n    at Context.eval (webpack://dgwltd/./node_modules/cypress-axe/dist/index.js:82:0)",
                "diff": null
              },
              "uuid": "6e110a99-6d48-4b1d-aac2-b51327a3cc25",
              "parentUUID": "b774cc58-e7af-4505-9c43-3cf5495683ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on https://chancerylaneproject.org/clauses/climate-linked-product-surveillance/",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on https://chancerylaneproject.org/clauses/climate-linked-product-surveillance/",
              "timedOut": null,
              "duration": 714,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "eb591502-b4a3-4756-aec5-9425c30df27f",
              "parentUUID": "b774cc58-e7af-4505-9c43-3cf5495683ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on https://chancerylaneproject.org/glossary/",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on https://chancerylaneproject.org/glossary/",
              "timedOut": null,
              "duration": 1640,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "f3743ba4-5a85-4cee-9402-ea3d68b13e5d",
              "parentUUID": "b774cc58-e7af-4505-9c43-3cf5495683ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on https://chancerylaneproject.org/glossary/100-renewable-energy-renewable-energy-sources/",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on https://chancerylaneproject.org/glossary/100-renewable-energy-renewable-energy-sources/",
              "timedOut": null,
              "duration": 588,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "e20e09f8-71c1-4aaf-8076-08797fb678b3",
              "parentUUID": "b774cc58-e7af-4505-9c43-3cf5495683ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on https://chancerylaneproject.org/news/",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on https://chancerylaneproject.org/news/",
              "timedOut": null,
              "duration": 638,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "583fbc18-bc0f-409d-8d0c-65952cf53ba4",
              "parentUUID": "b774cc58-e7af-4505-9c43-3cf5495683ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on https://chancerylaneproject.org/news/tclp-is-proud-to-support-the-launch-of-better-buildings-partnerships-revitalised-green-lease-toolkit/",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on https://chancerylaneproject.org/news/tclp-is-proud-to-support-the-launch-of-better-buildings-partnerships-revitalised-green-lease-toolkit/",
              "timedOut": null,
              "duration": 606,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "5939266b-be05-4192-8d97-e8b93da2d3d1",
              "parentUUID": "b774cc58-e7af-4505-9c43-3cf5495683ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on https://forms.chancerylaneproject.org/s/become-a-research-participant",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on https://forms.chancerylaneproject.org/s/become-a-research-participant",
              "timedOut": null,
              "duration": 1092,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "1894536e-4c69-48ab-8caf-5074ea2b555b",
              "parentUUID": "b774cc58-e7af-4505-9c43-3cf5495683ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on https://forms.chancerylaneproject.org/s/get-involved#Consent_Preferences",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on https://forms.chancerylaneproject.org/s/get-involved#Consent_Preferences",
              "timedOut": null,
              "duration": 487,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "bc7d7b65-4ef4-4225-8f81-2dc17acbfe44",
              "parentUUID": "b774cc58-e7af-4505-9c43-3cf5495683ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on https://forms.chancerylaneproject.org/s/apply-for-a-pro-bono-opportunity?PBOBid=a2NN1000002lGxqMAE#ProBonoOpportunityForm",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on https://forms.chancerylaneproject.org/s/apply-for-a-pro-bono-opportunity?PBOBid=a2NN1000002lGxqMAE#ProBonoOpportunityForm",
              "timedOut": null,
              "duration": 503,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "c2b8336b-3907-4452-b01c-28db3f9ad55a",
              "parentUUID": "b774cc58-e7af-4505-9c43-3cf5495683ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on https://forms.chancerylaneproject.org/s/get-email-alerts-for-updates?contentid=a2HN10000016AaaMAE#Subscribe",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on https://forms.chancerylaneproject.org/s/get-email-alerts-for-updates?contentid=a2HN10000016AaaMAE#Subscribe",
              "timedOut": null,
              "duration": 520,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "bbd0f058-07a1-4e3d-bf9c-c20454d94c6a",
              "parentUUID": "b774cc58-e7af-4505-9c43-3cf5495683ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on https://forms.chancerylaneproject.org/s/change-your-contact-preferences-and-info#Changeyourcontactpreferences",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on https://forms.chancerylaneproject.org/s/change-your-contact-preferences-and-info#Changeyourcontactpreferences",
              "timedOut": null,
              "duration": 455,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "c2a5563b-562d-43a0-b111-d8a87b7dd757",
              "parentUUID": "b774cc58-e7af-4505-9c43-3cf5495683ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on https://forms.chancerylaneproject.org/s/give-feedback?session=a2KN1000004qoo1MAA",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on https://forms.chancerylaneproject.org/s/give-feedback?session=a2KN1000004qoo1MAA",
              "timedOut": null,
              "duration": 610,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "516da69b-dd60-49eb-859f-c0be46431dcc",
              "parentUUID": "b774cc58-e7af-4505-9c43-3cf5495683ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17493cb9-71d5-4551-8a22-7d708e4672de",
            "eb591502-b4a3-4756-aec5-9425c30df27f",
            "f3743ba4-5a85-4cee-9402-ea3d68b13e5d",
            "e20e09f8-71c1-4aaf-8076-08797fb678b3",
            "583fbc18-bc0f-409d-8d0c-65952cf53ba4",
            "5939266b-be05-4192-8d97-e8b93da2d3d1",
            "1894536e-4c69-48ab-8caf-5074ea2b555b",
            "bc7d7b65-4ef4-4225-8f81-2dc17acbfe44",
            "c2b8336b-3907-4452-b01c-28db3f9ad55a",
            "bbd0f058-07a1-4e3d-bf9c-c20454d94c6a",
            "c2a5563b-562d-43a0-b111-d8a87b7dd757",
            "516da69b-dd60-49eb-859f-c0be46431dcc"
          ],
          "failures": [
            "6e110a99-6d48-4b1d-aac2-b51327a3cc25"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10340,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mocha",
        "reportFilename": "results",
        "quiet": true,
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}