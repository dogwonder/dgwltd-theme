{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-09T10:04:54.063Z",
    "end": "2024-05-09T10:04:59.995Z",
    "duration": 5932,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "182a8c07-4699-4862-b302-59b8850fd8d9",
      "title": "",
      "fullFile": "cypress/e2e/a11y.cy.js",
      "file": "cypress/e2e/a11y.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e0e9a3a-c43a-439b-89b9-238a8ca104da",
          "title": "Page accessibility tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have no accessibility violations on http://dev.wp.dgw.ltd",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on http://dev.wp.dgw.ltd",
              "timedOut": null,
              "duration": 660,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "f63421dd-c97e-4bae-90f6-f7f00d38a221",
              "parentUUID": "7e0e9a3a-c43a-439b-89b9-238a8ca104da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on http://dev.wp.dgw.ltdclauses/",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on http://dev.wp.dgw.ltdclauses/",
              "timedOut": null,
              "duration": 1108,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "3706f172-c1df-4436-adb3-d5a0c7f79da6",
              "parentUUID": "7e0e9a3a-c43a-439b-89b9-238a8ca104da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on http://dev.wp.dgw.ltdclauses/climate-linked-product-surveillance/",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on http://dev.wp.dgw.ltdclauses/climate-linked-product-surveillance/",
              "timedOut": null,
              "duration": 479,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "e239f89f-dc57-4869-961a-5eb11795b3fe",
              "parentUUID": "7e0e9a3a-c43a-439b-89b9-238a8ca104da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on http://dev.wp.dgw.ltdglossary/",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on http://dev.wp.dgw.ltdglossary/",
              "timedOut": null,
              "duration": 1150,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "23470dd2-2323-4f7c-b7d4-bf5706a10eba",
              "parentUUID": "7e0e9a3a-c43a-439b-89b9-238a8ca104da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on http://dev.wp.dgw.ltdglossary/100-renewable-energy-renewable-energy-sources/",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on http://dev.wp.dgw.ltdglossary/100-renewable-energy-renewable-energy-sources/",
              "timedOut": null,
              "duration": 431,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "8418904d-3492-409b-be08-dfc0d7073588",
              "parentUUID": "7e0e9a3a-c43a-439b-89b9-238a8ca104da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on http://dev.wp.dgw.ltdnews/",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on http://dev.wp.dgw.ltdnews/",
              "timedOut": null,
              "duration": 514,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "e5e2dc4a-f815-4ead-9bb3-5e2c36d4b432",
              "parentUUID": "7e0e9a3a-c43a-439b-89b9-238a8ca104da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have no accessibility violations on http://dev.wp.dgw.ltdnews/tclp-is-proud-to-support-the-launch-of-better-buildings-partnerships-revitalised-green-lease-toolkit/",
              "fullTitle": "Page accessibility tests Should have no accessibility violations on http://dev.wp.dgw.ltdnews/tclp-is-proud-to-support-the-launch-of-better-buildings-partnerships-revitalised-green-lease-toolkit/",
              "timedOut": null,
              "duration": 448,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(url);\ncy.injectAxe();\ncy.checkA11y(null, {\n  runOnly: {\n    type: 'tag',\n    values: ['wcag2a', 'wcag2aa'] // WCAG 2.1 Level A and Level AA rules\n  }\n}, violations => {\n  if (violations.length) {\n    let errorSummaries = [];\n    let detailedErrors = [];\n    let totalCount = 0;\n    violations.forEach(violation => {\n      totalCount += violation.nodes.length;\n      violation.nodes.forEach(node => {\n        const summary = `Error: ${violation.id}, Impact: ${violation.impact}`;\n        const details = `\n          ID: ${violation.id}\n          Target: ${node.target.join(', ')}\n          Impact: ${violation.impact}\n          Description: ${violation.description}\n          Help: ${violation.help}\n          Help URL: ${violation.helpUrl}\n          HTML: ${node.html}\n          Failure Summary: ${node.failureSummary}\\n`;\n        // Log each violation with a concise summary and detailed report\n        Cypress.log({\n          name: 'a11y error!',\n          consoleProps: () => ({\n            violation\n          }),\n          message: summary\n        });\n        errorSummaries.push(summary);\n        detailedErrors.push(details);\n      });\n    });\n    // Concatenate all errors into a single message with a total count\n    const errorReport = `Total Accessibility Violations: ${totalCount}\\n\\nAccessibility Violations Summary:\\n${errorSummaries.join('\\n')}\\n\\nDetailed Errors:\\n${detailedErrors.join('\\n')}`;\n    throw new Error(errorReport);\n  }\n});",
              "err": {},
              "uuid": "5779f775-ee3a-44c6-9459-3465fec4baf5",
              "parentUUID": "7e0e9a3a-c43a-439b-89b9-238a8ca104da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f63421dd-c97e-4bae-90f6-f7f00d38a221",
            "3706f172-c1df-4436-adb3-d5a0c7f79da6",
            "e239f89f-dc57-4869-961a-5eb11795b3fe",
            "23470dd2-2323-4f7c-b7d4-bf5706a10eba",
            "8418904d-3492-409b-be08-dfc0d7073588",
            "e5e2dc4a-f815-4ead-9bb3-5e2c36d4b432",
            "5779f775-ee3a-44c6-9459-3465fec4baf5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4790,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mocha",
        "reportFilename": "results",
        "quiet": true,
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}