//Accessibility

//Text meant only for screen readers
.visually-hidden, 
%visually-hidden {
    -webkit-clip-path: inset(50%);
    position: absolute !important;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    clip-path: inset(50%);
    width: 1px;
    height: 1px;
    margin: 0;
    padding: 0;
    border: 0;
    word-wrap: normal !important;
    white-space: nowrap;
}

.visually-hidden-focusable, 
%visually-hidden-focusable {
    &:active,
    &:focus {
      -webkit-clip-path: none;
      position: static !important;
      overflow: visible;
      clip: auto;
      clip-path: none;
      width: auto;
      height: auto;
      margin: inherit;
      padding: inherit;
      white-space: inherit;
  }
}

.hidden {
    display: none;
}

//For SVG patterns and sprites
.defs-only {
    position: absolute !important;
    left: -100% !important;
    overflow: none !important;
    width: 0 !important;
    height: 0 !important;
}

//Add a little margin (2 x x-height) to jump links - https://piccalil.li/quick-tip/add-scroll-margin-to-all-elements-which-can-be-targeted
[id] {
    scroll-margin-block-start: 2ex;
}

//Container
//Wrapper utility https://piccalil.li/quick-tip/use-css-clamp-to-create-a-more-flexible-wrapper-utility
//Include the padding on the clamp ideal value so we always have that buffer
%dgwltd-container, 
.dgwltd-container {
    margin-inline: auto;
    padding-inline: var(--wp--custom--spacing--md);
    position: relative;
    width: 100%;
    max-width: clamp(16rem,calc(var(--wp--custom--width--container) + calc(var(--wp--custom--spacing--md) * 2)),100vw);
}

/* 
FLOW COMPOSITION 
Like the Every Layout stack: https://every-layout.dev/layouts/stack/
Info about this implementation: https://piccalil.li/quick-tip/flow-utility/ 
*/
.stack {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
}

.stack > * {
    margin-block-start: 0 !important;
    margin-block-end: 0 !important;
}

//Use line height for spacing 
.stack > * + * {
    margin-block-start: var(--space, var(--wp--custom--spacing--gap)) !important;
}

.stack-small > * + * {
    --space: calc(var(--wp--custom--spacing--gap) * 0.75) !important;
}

.stack-large > * + * {
    --space: calc(var(--wp--custom--spacing--gap) * 2) !important;
}

/*
CLUSTER
More info: https://every-layout.dev/layouts/cluster/
A layout that lets you distribute items with consitent
spacing, regardless of their size

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-m)): This defines the space
between each item.

--cluster-horizontal-alignment (flex-start) How items should align
horizontally. Can be any acceptable flexbox aligmnent value.

--cluster-vertical-alignment How items should align vertically.
Can be any acceptable flexbox alignment value.
*/

.cluster {
    display: flex;
    flex-wrap: wrap;
    justify-content: var(--cluster-horizontal-alignment, flex-start);
    align-items: var(--cluster-vertical-alignment, center);
    gap: var(--gutter, var(--wp--custom--spacing--gap));
}

//Flex push items apart
.repel, 
%repel {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    gap: var(--gap,var(--wp--custom--spacing--md));
}

//Align full using subgrid
.align-full, 
%align-full {
    display: grid;
    grid-template-columns: subgrid;
    grid-column: 1 / -1;
}

.flex-center, 
%flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

//Sidebar - based on Every Layout
:has(> .sidebar) {
    display: flex;
    flex-wrap: wrap;
    gap: var(--sidebar-gap, 1rem);
}

.sidebar {
    flex-grow: 1;
    flex-basis: var(--sidebar-size, 20rem);
}

:has(> .sidebar) > :not(.sidebar) {
    min-inline-size: var(--sidebar-wrap-at, 50%);
    flex-grow: 999;
    flex-basis: 0;
}

.sticky {
    position: sticky;
    top: var(--wp--custom--spacing--md);
}

//More modern aspect ratio
%frame, 
.frame {
    aspect-ratio: 3 / 2;
  img {
      object-fit: cover;
      display: block;
      width: 100%;
      height: 100%;
  }
}

//Typography
%centered, 
.centered {
    text-align: center;
    text-wrap: balance;
}

%uppercase, 
.uppercase {
    --opentype-case: "case" on;
    text-transform: uppercase;
}

%smallcaps, 
.smallcaps {
    font-variant-caps: all-small-caps;
    font-variant-numeric: oldstyle-nums;
}


/* to remove margin from the top of a subheading,
and from the bottom of the preceding element */
%subheading, 
.subheading {
    margin-block-start: 0;
 *:has(+ &) {
     margin-block-end: 0;
	}
}

//Based on .govuk-\!-text-break-word
%break-word, 
.break-word {
    overflow-wrap: break-word !important;
    word-wrap: break-word !important;
}

%prose, 
.prose {
    font-variant-numeric: oldstyle-nums proportional-nums;
    -webkit-hyphens: auto;
    -webkit-hyphenate-limit-before: 4;
    -webkit-hyphenate-limit-after: 3;
    -webkit-hyphenate-limit-lines: 2;
    hyphenate-limit-chars: 7 4 3;
    hyphenate-limit-lines: 2;
    hyphenate-limit-zone: 8%;
    hyphenate-limit-last: always;
    font-size-adjust: 0.507;
    text-wrap: pretty;
    hyphens: auto;
}

.prose pre, .prose code, .prose var, .prose samp, .prose kbd,
.prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    -webkit-hyphens: manual;
    hyphens: manual;
}

//Alerts
%alert, 
.alert {
    display: flex;
    padding:1rem;
    background-color: var(--wp--custom--color--border);
    border-radius: 0.5rem;
    color: var(--wp--preset--color--dark);
  .alert__icon {
      margin-block-start:0.5rem;
      width: 40px;
      height:40px;
  }
  .alert__message {
      padding-inline-start: var(--wp--custom--spacing--sm);
      flex: 1;
    > * {
        color:inherit;
    }
  }
  &.warning {
      background-color: rgb(255, 251, 235);
      color: rgb(146, 64, 13);
  }
  &.error {
      background-color: rgb(254, 242, 242);
      color:rgb(153, 27, 26);
  }
  &.success {
      background-color: rgb(236, 253, 245);
      color: rgb(6, 95, 70);
  }
}

//Badge
%dgwltd-tag,
.dgwltd-tag {
    width: fit-content;
    padding:.25rem .625rem;
    background-color: var(--wp--custom--color--text);
    border-radius: 9999px;
    font-size: var(--wp--preset--font-size--xs);
    color: var(--wp--custom--color--background);
  a {
      text-decoration: none;
  }
  &:hover {
      cursor: pointer;
    a {
        color: var(--wp--preset--color--secondary);
    }
  }
}

// LQIP (Low Quality Image Placeholder) System 
//Base LQIP class using CSS custom properties
.dgwltd-lqip {
    filter: blur(1px);
    transition: filter 0.3s ease;
    background-image: var(--dgwltd-lqip-image, none);
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
}

//Remove blur when image loads
.dgwltd-lqip.loaded {
    filter: none;
}

//Glass effect https://www.tyleo.com/html-glass.html
%glass,
.glass {
    backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);

  box-shadow:
    /* Bottom and right depth effect */
    inset -0.75px -0.5px rgba(255, 255, 255, 0.1),
    /* Top and left depth effect */
    inset 0.75px 0.5px rgba(255, 255, 255, 0.025),
    /* Shadow effect */
    3px 2px 10px rgba(0, 0, 0, 0.25),
    /* Short subsurface effect */
    inset 0px 0px 10px 5px rgba(255, 255, 255, 0.025),
    /* Long subsurface effect */
    inset 0px 0px 40px 5px rgba(255, 255, 255, 0.025);
}

// Define the map with sizes and their corresponding values
$sizes: (
  sm: var(--wp--custom--spacing--xs),
  md: var(--wp--custom--spacing--md),
  lg: var(--wp--custom--spacing--lg),
  xl: var(--wp--custom--spacing--xl)
);

// Loop through the map to generate utility classes for margins and paddings
@each $size, $value in $sizes {
  .dgwltd-mbs-#{$size} {
      margin-block-start: #{$value};
  }

  // Margin Block End
  .dgwltd-mbe-#{$size} {
      margin-block-end: #{$value};
  }

  // Padding Block Start
  .dgwltd-pbs-#{$size} {
      padding-block-start: #{$value};
  }

  // Padding Block End
  .dgwltd-pbe-#{$size} {
      padding-block-end: #{$value};
  }
}